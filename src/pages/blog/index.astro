---
import BlogRootLayout from "../../layouts/BlogRootLayout.astro";
import child_process from "child_process";

// Get all the posts.
let allPosts = await Astro.glob("./*.md");

// Inject the created and updated dates from Git.
for (const p of allPosts) {
    try {
        // Get the time this was first ever created.
        const created = child_process.execSync(
            `git log --diff-filter=A --format=%aI -- ${p.file}`,
        );
        p.frontmatter.created = created.toString().trim();

        // Get the time this was last updated.
        const updated = child_process.execSync(
            `git log -1 --format=%aI -- ${p.file}`,
        );
        p.frontmatter.updated = updated.toString().trim();
    } catch (e) {
        console.error(e);
    }
}

// Sort the posts by their date.
allPosts = allPosts.sort((a, b) => {
    const dateA = new Date(a.frontmatter.updated as string);
    const dateB = new Date(b.frontmatter.updated as string);
    return dateB.getTime() - dateA.getTime();
});
---

<BlogRootLayout
    title="Blog"
    description="A list of all the blog posts I have wrote!"
    hideBackButton
>
    {
        allPosts.map((post) => {
            const created = new Date(post.frontmatter.created as string);
            const updated = new Date(post.frontmatter.updated as string);
            const same = created.getDay() === updated.getDay() &&
                created.getMonth() === updated.getMonth() &&
                created.getFullYear() === updated.getFullYear();

            return (
                <article class="my-8">
                    <h2 class="text-2xl font-bold">
                        <a href={post.url} class="hover:underline">
                            {post.frontmatter.title}
                        </a>
                    </h2>
                    <p class="text-lg my-2">
                        <span class="font-bold">Created:</span> {created.toLocaleDateString("en-US", {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                        })}

                        {
                            !same && (
                                <>
                                    <span class="mx-2 select-none">|</span>
                                    <span class="font-bold">Updated:</span> {updated.toLocaleDateString("en-US", {
                                        year: "numeric",
                                        month: "long",
                                        day: "numeric",
                                    })}
                                </>
                            )
                        }
                    </p>
                    <p>{post.frontmatter.description}</p>
                </article>
            );
        })
    }
</BlogRootLayout>
